/*
eHelply SDK - 1.1.96

eHelply SDK for SuperStack Services

API version: 1.1.96
Contact: support@ehelply.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ehelply

import (
	"encoding/json"
)

// NotesHTTPValidationError struct for NotesHTTPValidationError
type NotesHTTPValidationError struct {
	Detail []NotesValidationError `json:"detail,omitempty"`
}

// NewNotesHTTPValidationError instantiates a new NotesHTTPValidationError object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNotesHTTPValidationError() *NotesHTTPValidationError {
	this := NotesHTTPValidationError{}
	return &this
}

// NewNotesHTTPValidationErrorWithDefaults instantiates a new NotesHTTPValidationError object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNotesHTTPValidationErrorWithDefaults() *NotesHTTPValidationError {
	this := NotesHTTPValidationError{}
	return &this
}

// GetDetail returns the Detail field value if set, zero value otherwise.
func (o *NotesHTTPValidationError) GetDetail() []NotesValidationError {
	if o == nil || o.Detail == nil {
		var ret []NotesValidationError
		return ret
	}
	return o.Detail
}

// GetDetailOk returns a tuple with the Detail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NotesHTTPValidationError) GetDetailOk() ([]NotesValidationError, bool) {
	if o == nil || o.Detail == nil {
		return nil, false
	}
	return o.Detail, true
}

// HasDetail returns a boolean if a field has been set.
func (o *NotesHTTPValidationError) HasDetail() bool {
	if o != nil && o.Detail != nil {
		return true
	}

	return false
}

// SetDetail gets a reference to the given []NotesValidationError and assigns it to the Detail field.
func (o *NotesHTTPValidationError) SetDetail(v []NotesValidationError) {
	o.Detail = v
}

func (o NotesHTTPValidationError) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Detail != nil {
		toSerialize["detail"] = o.Detail
	}
	return json.Marshal(toSerialize)
}

type NullableNotesHTTPValidationError struct {
	value *NotesHTTPValidationError
	isSet bool
}

func (v NullableNotesHTTPValidationError) Get() *NotesHTTPValidationError {
	return v.value
}

func (v *NullableNotesHTTPValidationError) Set(val *NotesHTTPValidationError) {
	v.value = val
	v.isSet = true
}

func (v NullableNotesHTTPValidationError) IsSet() bool {
	return v.isSet
}

func (v *NullableNotesHTTPValidationError) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNotesHTTPValidationError(val *NotesHTTPValidationError) *NullableNotesHTTPValidationError {
	return &NullableNotesHTTPValidationError{value: val, isSet: true}
}

func (v NullableNotesHTTPValidationError) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNotesHTTPValidationError) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


