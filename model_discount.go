/*
eHelply SDK - 1.1.120

eHelply SDK for SuperStack Services

API version: 1.1.120
Contact: support@ehelply.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ehelply

import (
	"encoding/json"
)

// Discount struct for Discount
type Discount struct {
	Name string `json:"name"`
	Description string `json:"description"`
	Rate int32 `json:"rate"`
	Flat int32 `json:"flat"`
}

// NewDiscount instantiates a new Discount object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDiscount(name string, description string, rate int32, flat int32) *Discount {
	this := Discount{}
	this.Name = name
	this.Description = description
	this.Rate = rate
	this.Flat = flat
	return &this
}

// NewDiscountWithDefaults instantiates a new Discount object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDiscountWithDefaults() *Discount {
	this := Discount{}
	return &this
}

// GetName returns the Name field value
func (o *Discount) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *Discount) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *Discount) SetName(v string) {
	o.Name = v
}

// GetDescription returns the Description field value
func (o *Discount) GetDescription() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Description
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
func (o *Discount) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Description, true
}

// SetDescription sets field value
func (o *Discount) SetDescription(v string) {
	o.Description = v
}

// GetRate returns the Rate field value
func (o *Discount) GetRate() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Rate
}

// GetRateOk returns a tuple with the Rate field value
// and a boolean to check if the value has been set.
func (o *Discount) GetRateOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Rate, true
}

// SetRate sets field value
func (o *Discount) SetRate(v int32) {
	o.Rate = v
}

// GetFlat returns the Flat field value
func (o *Discount) GetFlat() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Flat
}

// GetFlatOk returns a tuple with the Flat field value
// and a boolean to check if the value has been set.
func (o *Discount) GetFlatOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Flat, true
}

// SetFlat sets field value
func (o *Discount) SetFlat(v int32) {
	o.Flat = v
}

func (o Discount) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["name"] = o.Name
	}
	if true {
		toSerialize["description"] = o.Description
	}
	if true {
		toSerialize["rate"] = o.Rate
	}
	if true {
		toSerialize["flat"] = o.Flat
	}
	return json.Marshal(toSerialize)
}

type NullableDiscount struct {
	value *Discount
	isSet bool
}

func (v NullableDiscount) Get() *Discount {
	return v.value
}

func (v *NullableDiscount) Set(val *Discount) {
	v.value = val
	v.isSet = true
}

func (v NullableDiscount) IsSet() bool {
	return v.isSet
}

func (v *NullableDiscount) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDiscount(val *Discount) *NullableDiscount {
	return &NullableDiscount{value: val, isSet: true}
}

func (v NullableDiscount) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDiscount) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


